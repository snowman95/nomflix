{"version":3,"sources":["api.js","Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPosterSmall.jpg","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Components/YoutubeVideo.js","Components/Slider.js","Components/ProductionCompany.js","Components/ProductionCountry.js","Components/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","posterImgUrl","rating","year","isMovie","to","pathname","state","noPoster","rol","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","length","map","movie","poster_path","original_title","vote_average","release_date","substring","a","data","results","this","setState","React","Component","Homecontainer","TVPresenter","topRated","airingToday","show","original_name","first_air_date","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","event","preventDefault","searchByTerm","target","YouTubeVideoContainer","IFrame","iframe","YoutubeVideo","frameborder","allowfullscreen","allow","src","SlideContainer","fadeAnimation","keyframes","Slide","active","Arrow","css","Prev","button","Next","DotContainer","DotBase","Dot","DotPoint","Slider","videos","videoLength","slideRef","useRef","dotRef","useState","slideIndex","setSlideIndex","handleFocus","n","current","index","ref","key","width","window","screenX","height","screenY","onClick","Logo","img","Production","item","logo_path","console","log","name","Season","season_number","Backdrop","bgImage","Content","Cover","Data","Info","h3","ItemContainer","Item","Divider","Overview","p","ButtonContainer","Button","DetailPresenter","result","showProductionCompany","setShowProductionCompany","showProductionCountry","setShowProductionCountry","showSeasons","setshowSeasons","backdrop_path","split","runtime","episode_run_time","genres","genre","overview","open","imdb_id","ProductionCompany","production_companies","ProductionCountry","production_countries","seasons","location","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","ul","li","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72774303.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\nexport default Message;\r\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.39a0a5e8.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport noPoster from \"../assets/noPosterSmall.jpg\";\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  border-radius: 4px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin-bottom: 3px;\r\n\r\n  width: 100%;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  /* 글자 튀어나가는 부분 깔끔하게 처리 */\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  display: block;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, posterImgUrl, title, rating, year, isMovie = false }) => (\r\n  <Link\r\n    to={\r\n      isMovie\r\n        ? {\r\n            pathname: `/movie/${id}`,\r\n            state: {\r\n              id,\r\n              posterImgUrl,\r\n              title,\r\n              rating,\r\n              year,\r\n              isMovie,\r\n            },\r\n          }\r\n        : {\r\n            pathname: `/show/${id}`,\r\n            state: {\r\n              id,\r\n              posterImgUrl,\r\n              title,\r\n              rating,\r\n              year,\r\n              isMovie,\r\n            },\r\n          }\r\n    }\r\n  >\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            posterImgUrl\r\n              ? `https://image.tmdb.org/t/p/w300${posterImgUrl}`\r\n              : `${noPoster}`\r\n          }\r\n        />\r\n        <Rating>\r\n          <span rol=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  backdropImgUrl: PropTypes.string,\r\n  posterImgUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  overview: PropTypes.string,\r\n};\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <title>Movies | Nomflix</title>\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                posterImgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                posterImgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                posterImgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nexport default HomePresenter;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import Homecontainer from \"./HomeContainer\";\r\nexport default Homecontainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Show | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                posterImgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                posterImgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"AiringToday\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                posterImgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nexport default TVPresenter;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  all: unset;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  handleSubmit,\r\n  loading,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or Tv Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                posterImgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                posterImgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message color=\"#95a5a6\" text=\"Nothing found\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\nexport default SearchPresenter;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n      this.setState({ loading: true });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        updateTerm={this.updateTerm}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst YouTubeVideoContainer = styled.div`\r\n  position: relative;\r\n  padding-bottom: 56.25%;\r\n  height: 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst IFrame = styled.iframe`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst YoutubeVideo = ({ id }) => {\r\n  return (\r\n    <YouTubeVideoContainer>\r\n      <IFrame\r\n        frameborder=\"0\"\r\n        allowfullscreen=\"1\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        title=\"YouTube video player\"\r\n        src={`https://www.youtube.com/embed/${id}?autoplay=0&amp;enablejsapi=1&amp;origin=http%3A%2F%2Flocalhost%3A3000&amp;widgetid=1`}\r\n        id=\"widget2\"\r\n      ></IFrame>\r\n    </YouTubeVideoContainer>\r\n  );\r\n};\r\n\r\nexport default YoutubeVideo;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport YoutubeVideo from \"./YoutubeVideo\";\r\n\r\n// * {box-sizing:border-box}\r\n\r\nconst SlideContainer = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  margin: auto;\r\n  box-sizing: border-box;\r\n`;\r\nconst fadeAnimation = keyframes`\r\n  from {opacity: .4}\r\n  to {opacity: 1}\r\n`;\r\nconst Slide = styled.div`\r\n  box-sizing: border-box;\r\n  /* display: none; */\r\n  ${(props) => props.active && ` animation: ${fadeAnimation} 1.5s; `}\r\n`;\r\n\r\nconst Arrow = css`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: auto;\r\n  margin-top: -22px;\r\n  padding: 16px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  transition: 0.6s ease;\r\n  border: none;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  border-radius: 0 3px 3px 0;\r\n  user-select: none;\r\n  box-sizing: border-box;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    color: black;\r\n  }\r\n`;\r\nconst Prev = styled.button`\r\n  ${Arrow}\r\n`;\r\nconst Next = styled.button`\r\n  ${Arrow}\r\n  right:0;\r\n`;\r\nconst Text = styled.div`\r\n  color: #f2f2f2;\r\n  font-size: 15px;\r\n  padding: 8px 12px;\r\n  position: absolute;\r\n  bottom: 8px;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst DotContainer = styled.div`\r\n  text-align: center;\r\n`;\r\nconst DotBase = css`\r\n  cursor: pointer;\r\n  height: 15px;\r\n  width: 15px;\r\n  margin: 0 2px;\r\n  background-color: #bbb;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  transition: background-color 0.6s ease;\r\n  &:hover {\r\n    background-color: #717171;\r\n  }\r\n`;\r\nconst Dot = styled.div`\r\n  ${DotBase}\r\n`;\r\nconst DotPoint = styled.div`\r\n  ${DotBase}\r\n  background-color : red;\r\n`;\r\nconst active = styled.div`\r\n  &:hover {\r\n    background-color: #717171;\r\n  }\r\n`;\r\nconst Slider = ({ data: videos }) => {\r\n  const videoLength = videos.length;\r\n  const slideRef = useRef([]);\r\n  const dotRef = useRef([]);\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n  // videos?.map((data, index) => (slideRef.current[index] = index));\r\n\r\n  const handleFocus = (n) => {\r\n    setSlideIndex((current) => {\r\n      if (current + n > videoLength - 1) setSlideIndex(0);\r\n      else if (current + n < 0) setSlideIndex(videoLength - 1);\r\n      else setSlideIndex(current + n);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SlideContainer>\r\n        {videos?.map((data, index) => (\r\n          <Slide key={index} ref={() => (slideRef.current[index] = index)}>\r\n            {slideIndex === index && (\r\n              <YoutubeVideo\r\n                id={data.key}\r\n                width={window.screenX}\r\n                height={window.screenY}\r\n              />\r\n            )}\r\n          </Slide>\r\n        ))}\r\n        <Prev onClick={() => handleFocus(-1)}>&#10094;</Prev>\r\n        <Next onClick={() => handleFocus(1)}>&#10095;</Next>\r\n      </SlideContainer>\r\n      <DotContainer>\r\n        {videos?.map((data, index) =>\r\n          slideIndex === index ? (\r\n            <DotPoint\r\n              key={index}\r\n              ref={() => (dotRef.current[index] = index)}\r\n              onClick={() => {\r\n                setSlideIndex(index);\r\n              }}\r\n            />\r\n          ) : (\r\n            <Dot\r\n              key={index}\r\n              ref={() => (dotRef.current[index] = index)}\r\n              onClick={() => {\r\n                setSlideIndex(index);\r\n              }}\r\n            />\r\n          )\r\n        )}\r\n      </DotContainer>\r\n    </>\r\n  );\r\n};\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  gap: 20px;\r\n  padding: 10px 0;\r\n  border: 1px solid black;\r\n`;\r\nconst Logo = styled.img`\r\n  width: 50px;\r\n  height: auto;\r\n`;\r\nconst Text = styled.div`\r\n  color: black;\r\n`;\r\nconst Production = ({ data }) => {\r\n  return (\r\n    <Container>\r\n      {data.map(\r\n        (item) =>\r\n          // <Text>{`${item.name}`}</Text>\r\n          item.logo_path && (\r\n            <Logo\r\n              key={item.id}\r\n              src={`https://image.tmdb.org/t/p/w300${item.logo_path}`}\r\n            ></Logo>\r\n          )\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  gap: 20px;\r\n  padding: 10px 0;\r\n  border: 1px solid black;\r\n`;\r\nconst Text = styled.div`\r\n  color: black;\r\n  font-weight: 700;\r\n`;\r\nconst Production = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <Container>\r\n      {data.map((item) => item.name && <Text>{item.name}</Text>)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  gap: 20px;\r\n  padding: 10px 0;\r\n  border: 1px solid black;\r\n`;\r\nconst Image = styled.img`\r\n  height: 200px;\r\n  border-radius: 4px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n  &:hover {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\nconst Season = ({ data }) => {\r\n  return (\r\n    <Container>\r\n      {data.map(\r\n        (item) =>\r\n          // <Text>{`${item.name}`}</Text>\r\n          item.poster_path && (\r\n            <Image\r\n              key={`${item.id}${item.season_number}`}\r\n              src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n            />\r\n          )\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Season;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport noPoster from \"../../assets/noPosterSmall.jpg\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\nimport Slider from \"Components/Slider\";\r\nimport ProductionCompany from \"Components/ProductionCompany\";\r\nimport ProductionCountry from \"Components/ProductionCountry\";\r\nimport Season from \"Components/Season\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10ex;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n`;\r\n\r\nconst Info = styled.div``;\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  gap: 15px;\r\n  margin-top: 15px;\r\n  border: none;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  &:hover {\r\n    font-weight: 700;\r\n    border: 1px solid white;\r\n  }\r\n  background-color: ${(props) => (props.active ? \"white\" : \"black\")};\r\n  color: ${(props) => (props.active ? \"black\" : \"white\")};\r\n`;\r\n\r\nconst DetailPresenter = ({ result, isMovie, loading, error }) => {\r\n  const [showProductionCompany, setShowProductionCompany] = useState(false);\r\n  const [showProductionCountry, setShowProductionCountry] = useState(false);\r\n  const [showSeasons, setshowSeasons] = useState(false);\r\n  console.log(result);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message color=\"#e74c3c\" text={error} />\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>{result.title ? result.title : result.name} | Nomflix</title>\r\n          </Helmet>\r\n          <Backdrop\r\n            bgImage={\r\n              result\r\n                ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n                : `${noPoster}`\r\n            }\r\n          ></Backdrop>\r\n          <Content>\r\n            <Cover\r\n              bgImage={\r\n                result\r\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                  : `${noPoster}`\r\n              }\r\n            />\r\n            <Data>\r\n              <Info>\r\n                <Title>{result.title ? result.title : result.name}</Title>\r\n                <ItemContainer>\r\n                  <Item>\r\n                    {result.release_date\r\n                      ? result.release_date.split(\"-\")[0]\r\n                      : result.first_air_date.split(\"-\")[0]}\r\n                  </Item>\r\n                  <Divider>▪</Divider>\r\n\r\n                  <Item>\r\n                    {result.runtime\r\n                      ? result.runtime\r\n                      : result.episode_run_time[0]}{\" \"}\r\n                    min\r\n                  </Item>\r\n                  <Divider>▪</Divider>\r\n\r\n                  <Item>\r\n                    {result.genres &&\r\n                      result.genres.map((genre, index) =>\r\n                        index === result.genres.length - 1\r\n                          ? genre.name\r\n                          : `${genre.name} / `\r\n                      )}\r\n                  </Item>\r\n                </ItemContainer>\r\n                <Overview>{result.overview}</Overview>\r\n                <ButtonContainer>\r\n                  {isMovie === true && (\r\n                    <Button\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `https://www.imdb.com/title/${result.imdb_id}`,\r\n                          \"_blank\"\r\n                        );\r\n                      }}\r\n                    >\r\n                      🎥Show more\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    active={showProductionCompany}\r\n                    onClick={() =>\r\n                      setShowProductionCompany((current) => !current)\r\n                    }\r\n                  >\r\n                    🏢Production Company\r\n                  </Button>\r\n                  <Button\r\n                    active={showProductionCountry}\r\n                    onClick={() =>\r\n                      setShowProductionCountry((current) => !current)\r\n                    }\r\n                  >\r\n                    🏳‍🌈Production Country\r\n                  </Button>\r\n\r\n                  {isMovie === false && (\r\n                    <Button\r\n                      active={showSeasons}\r\n                      onClick={() => setshowSeasons((current) => !current)}\r\n                    >\r\n                      ➕Series\r\n                    </Button>\r\n                  )}\r\n                </ButtonContainer>\r\n                {showProductionCompany && (\r\n                  <ProductionCompany data={result.production_companies} />\r\n                )}\r\n                {showProductionCountry && (\r\n                  <ProductionCountry data={result.production_countries} />\r\n                )}\r\n                {isMovie === false && showSeasons && (\r\n                  <Season data={result.seasons} />\r\n                )}\r\n              </Info>\r\n              <Slider data={result?.videos?.results} />\r\n            </Data>\r\n          </Content>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nexport default DetailPresenter;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    let result = \"null\";\r\n    const { isMovie } = this.state;\r\n    const parseId = parseInt(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parseId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n      console.log(result);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, isMovie, error, loading } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        isMovie={isMovie}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst HeaderC = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\nexport default withRouter(HeaderC);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV/TVContainer\";\r\nimport Search from \"Routes/Search/SearchContainer\";\r\nimport Detail from \"Routes/Detail/DetailContainer\";\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        {/* Switch는 오직 하나의 Route만 Render하게 해줌 */}\r\n        <Route path=\"/\" exact component={Home} />\r\n        {/* exact 를 넣지않으면 tv로 시작하는 아무주소가 다 매칭됨 */}\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" exact component={Detail} />\r\n        <Route path=\"/show/:id\" exact component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n        {/* 일치하는 주소가 하나도 없으면 Redirect 부분 작동  */}\r\n      </Switch>\r\n    </>\r\n  </HashRouter>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration:none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing : border-box;\r\n  }\r\n  body{\r\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 14px;\r\n    background-color: rgba(20,20,20,1);\r\n    color: white;\r\n    padding-top:50px;\r\n  }\r\n`;\r\nexport default GlobalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n// import \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}